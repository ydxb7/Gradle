/*

In this project we have a couple super simple classes, Echo, and PaidEcho. The
Echo class has two methods, one of which just returns its argument, and the
other of which first logs its argument before returning it. The PaidEcho class
does something similar for collections.

We also have some unit tests written for these classes. Our tests for the Echo
class are in src/test/java, and our tests for the PaidEcho class are in
src/testPaid/java.

We can use the `test` task to run all unit tests, but when we do, we get the error:

    java.lang.RuntimeException: Method i in android.util.Log not mocked

Looks like we've tried to use part of the Android framework (the logger) from
a unit test. Since we need to test part of the Android framework, we need to
use a connected test that runs on a live Android device or emulator.

*/

apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.udacity.gradle.testing"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "version"
    productFlavors {
        free {
            dimension "version"
            applicationId "com.udacity.gradle.testing.free"
        }
        paid {
            dimension "version"
            applicationId "com.udacity.gradle.testing.paid"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
}
